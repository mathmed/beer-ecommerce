-- MySQL Script generated by MySQL Workbench
-- ter 27 nov 2018 17:15:06 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ecommerce
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ecommerce
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ecommerce` DEFAULT CHARACTER SET utf8 ;
USE `ecommerce` ;

-- -----------------------------------------------------
-- Table `ecommerce`.`marca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`marca` (
  `id_marca` INT NOT NULL AUTO_INCREMENT,
  `nome_marca` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_marca`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`bebida`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`bebida` (
  `id_bebida` INT NOT NULL AUTO_INCREMENT,
  `nome_bebida` VARCHAR(45) NOT NULL,
  `ml` VARCHAR(45) NOT NULL,
  `preco_bebida` FLOAT NOT NULL,
  `descricao_bebida` LONGTEXT NOT NULL,
  `teor_alcoolico` FLOAT NOT NULL,
  `tipo_bebida` VARCHAR(250) NOT NULL,
  `status_bebida` VARCHAR(45) NOT NULL,
  `id_marca` INT NOT NULL,
  PRIMARY KEY (`id_bebida`),
  INDEX `fk_bebida_marca1_idx` (`id_marca` ASC) ,
  CONSTRAINT `fk_bebida_marca1`
    FOREIGN KEY (`id_marca`)
    REFERENCES `ecommerce`.`marca` (`id_marca`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`categoria` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT,
  `descricao_categoria` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`imagem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`imagem` (
  `id_imagem` INT NOT NULL AUTO_INCREMENT,
  `src` VARCHAR(255) NOT NULL,
  `id_bebida` INT NOT NULL,
  PRIMARY KEY (`id_imagem`),
  INDEX `fk_imagem_bebida_idx` (`id_bebida` ASC) ,
  CONSTRAINT `fk_imagem_bebida`
    FOREIGN KEY (`id_bebida`)
    REFERENCES `ecommerce`.`bebida` (`id_bebida`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`bebida_has_categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`bebida_has_categoria` (
  `id_bebida` INT NOT NULL,
  `id_categoria` INT NOT NULL,
  PRIMARY KEY (`id_bebida`, `id_categoria`),
  INDEX `fk_bebida_has_categoria_categoria1_idx` (`id_categoria` ASC) ,
  INDEX `fk_bebida_has_categoria_bebida1_idx` (`id_bebida` ASC) ,
  CONSTRAINT `fk_bebida_has_categoria_bebida1`
    FOREIGN KEY (`id_bebida`)
    REFERENCES `ecommerce`.`bebida` (`id_bebida`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bebida_has_categoria_categoria1`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `ecommerce`.`categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`promocao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`promocao` (
  `id_promocao` INT NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(45) NOT NULL,
  `desconto` FLOAT NOT NULL,
  `apelido_promocao` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_promocao`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`bebida_has_promocao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`bebida_has_promocao` (
  `id_promocao` INT NOT NULL,
  `id_bebida` INT NOT NULL,
  PRIMARY KEY (`id_promocao`, `id_bebida`),
  INDEX `fk_promocao_has_bebida_bebida1_idx` (`id_bebida` ASC) ,
  INDEX `fk_promocao_has_bebida_promocao1_idx` (`id_promocao` ASC) ,
  CONSTRAINT `fk_promocao_has_bebida_promocao1`
    FOREIGN KEY (`id_promocao`)
    REFERENCES `ecommerce`.`promocao` (`id_promocao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_promocao_has_bebida_bebida1`
    FOREIGN KEY (`id_bebida`)
    REFERENCES `ecommerce`.`bebida` (`id_bebida`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`status` (
  `id_status` INT NOT NULL AUTO_INCREMENT,
  `descricao_status` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_status`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`pagamento` (
  `id_pagamento` INT NOT NULL AUTO_INCREMENT,
  `numero_cartao` VARCHAR(45) NOT NULL,
  `nome_cartao` VARCHAR(45) NOT NULL,
  `senha_cartao` VARCHAR(45) NOT NULL,
  `bandeira` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_pagamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`endereco` (
  `id_endereco` INT NOT NULL AUTO_INCREMENT,
  `apelido_endereco` VARCHAR(45) NULL,
  `numero_endereco` VARCHAR(45) NOT NULL,
  `rua` VARCHAR(255) NOT NULL,
  `bairro` VARCHAR(255) NOT NULL,
  `cidade` VARCHAR(255) NOT NULL,
  `uf` VARCHAR(45) NOT NULL,
  `cep` VARCHAR(45) NOT NULL,
  `complemento` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_endereco`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`contato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`contato` (
  `id_contato` INT NOT NULL AUTO_INCREMENT,
  `numero_telefone` VARCHAR(45) NOT NULL,
  `numero_celular` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_contato`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `cpf` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `data_nascimento` DATE NOT NULL,
  `apelido` VARCHAR(45) NOT NULL,
  `data_cadastro` DATE NOT NULL,
  `id_endereco` INT NOT NULL,
  `id_contato` INT NOT NULL,
  PRIMARY KEY (`id_usuario`),
  INDEX `fk_usuario_endereco1_idx` (`id_endereco` ASC) ,
  INDEX `fk_usuario_contato1_idx` (`id_contato` ASC) ,
  CONSTRAINT `fk_usuario_endereco1`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `ecommerce`.`endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_contato1`
    FOREIGN KEY (`id_contato`)
    REFERENCES `ecommerce`.`contato` (`id_contato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`pedido` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `valor_total` FLOAT NOT NULL,
  `data_att_status` DATETIME NOT NULL,
  `data_pedido` DATETIME NOT NULL,
  `id_status` INT NOT NULL,
  `id_pagamento` INT NOT NULL,
  `id_endereco` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_pedido`),
  INDEX `fk_pedido_status1_idx` (`id_status` ASC) ,
  INDEX `fk_pedido_pagamento1_idx` (`id_pagamento` ASC) ,
  INDEX `fk_pedido_endereco1_idx` (`id_endereco` ASC) ,
  INDEX `fk_pedido_usuario1_idx` (`id_usuario` ASC) ,
  CONSTRAINT `fk_pedido_status1`
    FOREIGN KEY (`id_status`)
    REFERENCES `ecommerce`.`status` (`id_status`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_pagamento1`
    FOREIGN KEY (`id_pagamento`)
    REFERENCES `ecommerce`.`pagamento` (`id_pagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_endereco1`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `ecommerce`.`endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `ecommerce`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`pedido_has_bebida`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`pedido_has_bebida` (
  `id_pedido` INT NOT NULL,
  `id_bebida` INT NOT NULL,
  PRIMARY KEY (`id_pedido`, `id_bebida`),
  INDEX `fk_pedido_has_bebida_bebida1_idx` (`id_bebida` ASC) ,
  INDEX `fk_pedido_has_bebida_pedido1_idx` (`id_pedido` ASC) ,
  CONSTRAINT `fk_pedido_has_bebida_pedido1`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `ecommerce`.`pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_has_bebida_bebida1`
    FOREIGN KEY (`id_bebida`)
    REFERENCES `ecommerce`.`bebida` (`id_bebida`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`fornecedor` (
  `id_fornecedor` INT NOT NULL AUTO_INCREMENT,
  `nome_fornecedor` VARCHAR(255) NOT NULL,
  `cnpj_fornecedor` VARCHAR(45) NOT NULL,
  `email_fornecedor` VARCHAR(255) NOT NULL,
  `data_cadastro_fornecedor` DATE NOT NULL,
  `id_endereco` INT NOT NULL,
  `id_contato` INT NOT NULL,
  PRIMARY KEY (`id_fornecedor`),
  INDEX `fk_fornecedor_endereco1_idx` (`id_endereco` ASC) ,
  INDEX `fk_fornecedor_contato1_idx` (`id_contato` ASC) ,
  CONSTRAINT `fk_fornecedor_endereco1`
    FOREIGN KEY (`id_endereco`)
    REFERENCES `ecommerce`.`endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fornecedor_contato1`
    FOREIGN KEY (`id_contato`)
    REFERENCES `ecommerce`.`contato` (`id_contato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`estoque` (
  `id_lote` INT NOT NULL AUTO_INCREMENT,
  `entrada` DATE NOT NULL,
  `quantidade` INT NOT NULL,
  `ultima_saida` DATE NOT NULL,
  `valor_compra_unidade` DOUBLE NOT NULL,
  `id_bebida` INT NOT NULL,
  `id_fornecedor` INT NOT NULL,
  `atual` INT NOT NULL,
  PRIMARY KEY (`id_lote`),
  INDEX `fk_estoque_bebida1_idx` (`id_bebida` ASC) ,
  INDEX `fk_estoque_fornecedor1_idx` (`id_fornecedor` ASC) ,
  CONSTRAINT `fk_estoque_bebida1`
    FOREIGN KEY (`id_bebida`)
    REFERENCES `ecommerce`.`bebida` (`id_bebida`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_estoque_fornecedor1`
    FOREIGN KEY (`id_fornecedor`)
    REFERENCES `ecommerce`.`fornecedor` (`id_fornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`adm`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`adm` (
  `id_adm` INT NOT NULL AUTO_INCREMENT,
  `nome_adm` VARCHAR(45) NOT NULL,
  `cpf_adm` VARCHAR(45) NOT NULL,
  `email_adm` VARCHAR(45) NOT NULL,
  `senha_adm` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_adm`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
